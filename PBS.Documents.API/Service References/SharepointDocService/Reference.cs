//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PBS.Documents.API.SharepointDocService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Document", Namespace="http://schemas.datacontract.org/2004/07/Peninsula.SharePoint.Common.Library")]
    [System.SerializableAttribute()]
    public partial class Document : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaveatsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExtensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Caveats {
            get {
                return this.CaveatsField;
            }
            set {
                if ((object.ReferenceEquals(this.CaveatsField, value) != true)) {
                    this.CaveatsField = value;
                    this.RaisePropertyChanged("Caveats");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentType {
            get {
                return this.DocumentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentTypeField, value) != true)) {
                    this.DocumentTypeField = value;
                    this.RaisePropertyChanged("DocumentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Extension {
            get {
                return this.ExtensionField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtensionField, value) != true)) {
                    this.ExtensionField = value;
                    this.RaisePropertyChanged("Extension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocumentWithContent", Namespace="http://schemas.datacontract.org/2004/07/Peninsula.SharePoint.Common.Library")]
    [System.SerializableAttribute()]
    public partial class DocumentWithContent : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PBS.Documents.API.SharepointDocService.Document DocumentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] FBytesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PBS.Documents.API.SharepointDocService.Document Document {
            get {
                return this.DocumentField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentField, value) != true)) {
                    this.DocumentField = value;
                    this.RaisePropertyChanged("Document");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] FBytes {
            get {
                return this.FBytesField;
            }
            set {
                if ((object.ReferenceEquals(this.FBytesField, value) != true)) {
                    this.FBytesField = value;
                    this.RaisePropertyChanged("FBytes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InstallationReceipt", Namespace="http://schemas.datacontract.org/2004/07/Peninsula.SharePoint.Common.Library")]
    [System.SerializableAttribute()]
    public partial class InstallationReceipt : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string Caveatsk__BackingFieldField;
        
        private string ClientApprovalk__BackingFieldField;
        
        private string ClientDocIdsk__BackingFieldField;
        
        private string ClientDocVersionsk__BackingFieldField;
        
        private string CreatedByk__BackingFieldField;
        
        private string Createdk__BackingFieldField;
        
        private string CustomerIdk__BackingFieldField;
        
        private string DocTitlesk__BackingFieldField;
        
        private PBS.Documents.API.SharepointDocService.Document[] Documentk__BackingFieldField;
        
        private string Editork__BackingFieldField;
        
        private string HrOnlineUserk__BackingFieldField;
        
        private PBS.Documents.API.SharepointDocService.InstallationReceiptAttachment InstallationReceiptAttachmentk__BackingFieldField;
        
        private string Modifiedk__BackingFieldField;
        
        private string ReceiptsIdk__BackingFieldField;
        
        private string RejectCommentsk__BackingFieldField;
        
        private string Tcsk__BackingFieldField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Caveats>k__BackingField", IsRequired=true)]
        public string Caveatsk__BackingField {
            get {
                return this.Caveatsk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.Caveatsk__BackingFieldField, value) != true)) {
                    this.Caveatsk__BackingFieldField = value;
                    this.RaisePropertyChanged("Caveatsk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<ClientApproval>k__BackingField", IsRequired=true)]
        public string ClientApprovalk__BackingField {
            get {
                return this.ClientApprovalk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientApprovalk__BackingFieldField, value) != true)) {
                    this.ClientApprovalk__BackingFieldField = value;
                    this.RaisePropertyChanged("ClientApprovalk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<ClientDocIds>k__BackingField", IsRequired=true)]
        public string ClientDocIdsk__BackingField {
            get {
                return this.ClientDocIdsk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientDocIdsk__BackingFieldField, value) != true)) {
                    this.ClientDocIdsk__BackingFieldField = value;
                    this.RaisePropertyChanged("ClientDocIdsk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<ClientDocVersions>k__BackingField", IsRequired=true)]
        public string ClientDocVersionsk__BackingField {
            get {
                return this.ClientDocVersionsk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientDocVersionsk__BackingFieldField, value) != true)) {
                    this.ClientDocVersionsk__BackingFieldField = value;
                    this.RaisePropertyChanged("ClientDocVersionsk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<CreatedBy>k__BackingField", IsRequired=true)]
        public string CreatedByk__BackingField {
            get {
                return this.CreatedByk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByk__BackingFieldField, value) != true)) {
                    this.CreatedByk__BackingFieldField = value;
                    this.RaisePropertyChanged("CreatedByk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Created>k__BackingField", IsRequired=true)]
        public string Createdk__BackingField {
            get {
                return this.Createdk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.Createdk__BackingFieldField, value) != true)) {
                    this.Createdk__BackingFieldField = value;
                    this.RaisePropertyChanged("Createdk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<CustomerId>k__BackingField", IsRequired=true)]
        public string CustomerIdk__BackingField {
            get {
                return this.CustomerIdk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerIdk__BackingFieldField, value) != true)) {
                    this.CustomerIdk__BackingFieldField = value;
                    this.RaisePropertyChanged("CustomerIdk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<DocTitles>k__BackingField", IsRequired=true)]
        public string DocTitlesk__BackingField {
            get {
                return this.DocTitlesk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.DocTitlesk__BackingFieldField, value) != true)) {
                    this.DocTitlesk__BackingFieldField = value;
                    this.RaisePropertyChanged("DocTitlesk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Document>k__BackingField", IsRequired=true)]
        public PBS.Documents.API.SharepointDocService.Document[] Documentk__BackingField {
            get {
                return this.Documentk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.Documentk__BackingFieldField, value) != true)) {
                    this.Documentk__BackingFieldField = value;
                    this.RaisePropertyChanged("Documentk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Editor>k__BackingField", IsRequired=true)]
        public string Editork__BackingField {
            get {
                return this.Editork__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.Editork__BackingFieldField, value) != true)) {
                    this.Editork__BackingFieldField = value;
                    this.RaisePropertyChanged("Editork__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<HrOnlineUser>k__BackingField", IsRequired=true)]
        public string HrOnlineUserk__BackingField {
            get {
                return this.HrOnlineUserk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.HrOnlineUserk__BackingFieldField, value) != true)) {
                    this.HrOnlineUserk__BackingFieldField = value;
                    this.RaisePropertyChanged("HrOnlineUserk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<InstallationReceiptAttachment>k__BackingField", IsRequired=true)]
        public PBS.Documents.API.SharepointDocService.InstallationReceiptAttachment InstallationReceiptAttachmentk__BackingField {
            get {
                return this.InstallationReceiptAttachmentk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.InstallationReceiptAttachmentk__BackingFieldField, value) != true)) {
                    this.InstallationReceiptAttachmentk__BackingFieldField = value;
                    this.RaisePropertyChanged("InstallationReceiptAttachmentk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Modified>k__BackingField", IsRequired=true)]
        public string Modifiedk__BackingField {
            get {
                return this.Modifiedk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.Modifiedk__BackingFieldField, value) != true)) {
                    this.Modifiedk__BackingFieldField = value;
                    this.RaisePropertyChanged("Modifiedk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<ReceiptsId>k__BackingField", IsRequired=true)]
        public string ReceiptsIdk__BackingField {
            get {
                return this.ReceiptsIdk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiptsIdk__BackingFieldField, value) != true)) {
                    this.ReceiptsIdk__BackingFieldField = value;
                    this.RaisePropertyChanged("ReceiptsIdk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<RejectComments>k__BackingField", IsRequired=true)]
        public string RejectCommentsk__BackingField {
            get {
                return this.RejectCommentsk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.RejectCommentsk__BackingFieldField, value) != true)) {
                    this.RejectCommentsk__BackingFieldField = value;
                    this.RaisePropertyChanged("RejectCommentsk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Tcs>k__BackingField", IsRequired=true)]
        public string Tcsk__BackingField {
            get {
                return this.Tcsk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.Tcsk__BackingFieldField, value) != true)) {
                    this.Tcsk__BackingFieldField = value;
                    this.RaisePropertyChanged("Tcsk__BackingField");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InstallationReceiptAttachment", Namespace="http://schemas.datacontract.org/2004/07/Peninsula.SharePoint.Common.Library")]
    [System.SerializableAttribute()]
    public partial class InstallationReceiptAttachment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string AttachmentNamek__BackingFieldField;
        
        private string AttachmentUrlk__BackingFieldField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<AttachmentName>k__BackingField", IsRequired=true)]
        public string AttachmentNamek__BackingField {
            get {
                return this.AttachmentNamek__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.AttachmentNamek__BackingFieldField, value) != true)) {
                    this.AttachmentNamek__BackingFieldField = value;
                    this.RaisePropertyChanged("AttachmentNamek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<AttachmentUrl>k__BackingField", IsRequired=true)]
        public string AttachmentUrlk__BackingField {
            get {
                return this.AttachmentUrlk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.AttachmentUrlk__BackingFieldField, value) != true)) {
                    this.AttachmentUrlk__BackingFieldField = value;
                    this.RaisePropertyChanged("AttachmentUrlk__BackingField");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StationaryDocument", Namespace="http://schemas.datacontract.org/2004/07/Peninsula.SharePoint.Common.Library")]
    [System.SerializableAttribute()]
    public partial class StationaryDocument : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExtensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Extension {
            get {
                return this.ExtensionField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtensionField, value) != true)) {
                    this.ExtensionField = value;
                    this.RaisePropertyChanged("Extension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedOn {
            get {
                return this.ModifiedOnField;
            }
            set {
                if ((this.ModifiedOnField.Equals(value) != true)) {
                    this.ModifiedOnField = value;
                    this.RaisePropertyChanged("ModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StationaryDocumentWithContent", Namespace="http://schemas.datacontract.org/2004/07/Peninsula.SharePoint.Common.Library")]
    [System.SerializableAttribute()]
    public partial class StationaryDocumentWithContent : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PBS.Documents.API.SharepointDocService.StationaryDocument DocumentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] FBytesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PBS.Documents.API.SharepointDocService.StationaryDocument Document {
            get {
                return this.DocumentField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentField, value) != true)) {
                    this.DocumentField = value;
                    this.RaisePropertyChanged("Document");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] FBytes {
            get {
                return this.FBytesField;
            }
            set {
                if ((object.ReferenceEquals(this.FBytesField, value) != true)) {
                    this.FBytesField = value;
                    this.RaisePropertyChanged("FBytes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SharepointDocService.ISpService")]
    public interface ISpService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpService/GetDocuments", ReplyAction="http://tempuri.org/ISpService/GetDocumentsResponse")]
        PBS.Documents.API.SharepointDocService.Document[] GetDocuments(string clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpService/GetDocuments", ReplyAction="http://tempuri.org/ISpService/GetDocumentsResponse")]
        System.Threading.Tasks.Task<PBS.Documents.API.SharepointDocService.Document[]> GetDocumentsAsync(string clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpService/GetDocument", ReplyAction="http://tempuri.org/ISpService/GetDocumentResponse")]
        PBS.Documents.API.SharepointDocService.DocumentWithContent GetDocument(string clientId, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpService/GetDocument", ReplyAction="http://tempuri.org/ISpService/GetDocumentResponse")]
        System.Threading.Tasks.Task<PBS.Documents.API.SharepointDocService.DocumentWithContent> GetDocumentAsync(string clientId, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpService/GetAllInstallationReceipts", ReplyAction="http://tempuri.org/ISpService/GetAllInstallationReceiptsResponse")]
        PBS.Documents.API.SharepointDocService.InstallationReceipt[] GetAllInstallationReceipts(string clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpService/GetAllInstallationReceipts", ReplyAction="http://tempuri.org/ISpService/GetAllInstallationReceiptsResponse")]
        System.Threading.Tasks.Task<PBS.Documents.API.SharepointDocService.InstallationReceipt[]> GetAllInstallationReceiptsAsync(string clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpService/GetInstallationReceiptById", ReplyAction="http://tempuri.org/ISpService/GetInstallationReceiptByIdResponse")]
        PBS.Documents.API.SharepointDocService.InstallationReceipt GetInstallationReceiptById(PBS.Documents.API.SharepointDocService.InstallationReceipt installationReceipt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpService/GetInstallationReceiptById", ReplyAction="http://tempuri.org/ISpService/GetInstallationReceiptByIdResponse")]
        System.Threading.Tasks.Task<PBS.Documents.API.SharepointDocService.InstallationReceipt> GetInstallationReceiptByIdAsync(PBS.Documents.API.SharepointDocService.InstallationReceipt installationReceipt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpService/UpdateInstallationReceipt", ReplyAction="http://tempuri.org/ISpService/UpdateInstallationReceiptResponse")]
        bool UpdateInstallationReceipt(string customerId, string receiptId, bool outCome, string hrUserEmail, string comments);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpService/UpdateInstallationReceipt", ReplyAction="http://tempuri.org/ISpService/UpdateInstallationReceiptResponse")]
        System.Threading.Tasks.Task<bool> UpdateInstallationReceiptAsync(string customerId, string receiptId, bool outCome, string hrUserEmail, string comments);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpService/GetStationaryLocations", ReplyAction="http://tempuri.org/ISpService/GetStationaryLocationsResponse")]
        string[] GetStationaryLocations();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpService/GetStationaryLocations", ReplyAction="http://tempuri.org/ISpService/GetStationaryLocationsResponse")]
        System.Threading.Tasks.Task<string[]> GetStationaryLocationsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpService/GetStationaryDocuments", ReplyAction="http://tempuri.org/ISpService/GetStationaryDocumentsResponse")]
        PBS.Documents.API.SharepointDocService.StationaryDocument[] GetStationaryDocuments(string location);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpService/GetStationaryDocuments", ReplyAction="http://tempuri.org/ISpService/GetStationaryDocumentsResponse")]
        System.Threading.Tasks.Task<PBS.Documents.API.SharepointDocService.StationaryDocument[]> GetStationaryDocumentsAsync(string location);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpService/GetStationaryDocument", ReplyAction="http://tempuri.org/ISpService/GetStationaryDocumentResponse")]
        PBS.Documents.API.SharepointDocService.StationaryDocumentWithContent GetStationaryDocument(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpService/GetStationaryDocument", ReplyAction="http://tempuri.org/ISpService/GetStationaryDocumentResponse")]
        System.Threading.Tasks.Task<PBS.Documents.API.SharepointDocService.StationaryDocumentWithContent> GetStationaryDocumentAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISpServiceChannel : PBS.Documents.API.SharepointDocService.ISpService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SpServiceClient : System.ServiceModel.ClientBase<PBS.Documents.API.SharepointDocService.ISpService>, PBS.Documents.API.SharepointDocService.ISpService {
        
        public SpServiceClient() {
        }
        
        public SpServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SpServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SpServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SpServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PBS.Documents.API.SharepointDocService.Document[] GetDocuments(string clientId) {
            return base.Channel.GetDocuments(clientId);
        }
        
        public System.Threading.Tasks.Task<PBS.Documents.API.SharepointDocService.Document[]> GetDocumentsAsync(string clientId) {
            return base.Channel.GetDocumentsAsync(clientId);
        }
        
        public PBS.Documents.API.SharepointDocService.DocumentWithContent GetDocument(string clientId, int id) {
            return base.Channel.GetDocument(clientId, id);
        }
        
        public System.Threading.Tasks.Task<PBS.Documents.API.SharepointDocService.DocumentWithContent> GetDocumentAsync(string clientId, int id) {
            return base.Channel.GetDocumentAsync(clientId, id);
        }
        
        public PBS.Documents.API.SharepointDocService.InstallationReceipt[] GetAllInstallationReceipts(string clientId) {
            return base.Channel.GetAllInstallationReceipts(clientId);
        }
        
        public System.Threading.Tasks.Task<PBS.Documents.API.SharepointDocService.InstallationReceipt[]> GetAllInstallationReceiptsAsync(string clientId) {
            return base.Channel.GetAllInstallationReceiptsAsync(clientId);
        }
        
        public PBS.Documents.API.SharepointDocService.InstallationReceipt GetInstallationReceiptById(PBS.Documents.API.SharepointDocService.InstallationReceipt installationReceipt) {
            return base.Channel.GetInstallationReceiptById(installationReceipt);
        }
        
        public System.Threading.Tasks.Task<PBS.Documents.API.SharepointDocService.InstallationReceipt> GetInstallationReceiptByIdAsync(PBS.Documents.API.SharepointDocService.InstallationReceipt installationReceipt) {
            return base.Channel.GetInstallationReceiptByIdAsync(installationReceipt);
        }
        
        public bool UpdateInstallationReceipt(string customerId, string receiptId, bool outCome, string hrUserEmail, string comments) {
            return base.Channel.UpdateInstallationReceipt(customerId, receiptId, outCome, hrUserEmail, comments);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateInstallationReceiptAsync(string customerId, string receiptId, bool outCome, string hrUserEmail, string comments) {
            return base.Channel.UpdateInstallationReceiptAsync(customerId, receiptId, outCome, hrUserEmail, comments);
        }
        
        public string[] GetStationaryLocations() {
            return base.Channel.GetStationaryLocations();
        }
        
        public System.Threading.Tasks.Task<string[]> GetStationaryLocationsAsync() {
            return base.Channel.GetStationaryLocationsAsync();
        }
        
        public PBS.Documents.API.SharepointDocService.StationaryDocument[] GetStationaryDocuments(string location) {
            return base.Channel.GetStationaryDocuments(location);
        }
        
        public System.Threading.Tasks.Task<PBS.Documents.API.SharepointDocService.StationaryDocument[]> GetStationaryDocumentsAsync(string location) {
            return base.Channel.GetStationaryDocumentsAsync(location);
        }
        
        public PBS.Documents.API.SharepointDocService.StationaryDocumentWithContent GetStationaryDocument(int id) {
            return base.Channel.GetStationaryDocument(id);
        }
        
        public System.Threading.Tasks.Task<PBS.Documents.API.SharepointDocService.StationaryDocumentWithContent> GetStationaryDocumentAsync(int id) {
            return base.Channel.GetStationaryDocumentAsync(id);
        }
    }
}
