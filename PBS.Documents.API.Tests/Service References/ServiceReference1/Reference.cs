//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PBS.Documents.API.Tests.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ISpService")]
    public interface ISpService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpService/GetDocuments", ReplyAction="http://tempuri.org/ISpService/GetDocumentsResponse")]
        PBS.Documents.API.SharepointDocService.Document[] GetDocuments(string clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpService/GetDocuments", ReplyAction="http://tempuri.org/ISpService/GetDocumentsResponse")]
        System.Threading.Tasks.Task<PBS.Documents.API.SharepointDocService.Document[]> GetDocumentsAsync(string clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpService/GetDocument", ReplyAction="http://tempuri.org/ISpService/GetDocumentResponse")]
        PBS.Documents.API.SharepointDocService.DocumentWithContent GetDocument(string clientId, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpService/GetDocument", ReplyAction="http://tempuri.org/ISpService/GetDocumentResponse")]
        System.Threading.Tasks.Task<PBS.Documents.API.SharepointDocService.DocumentWithContent> GetDocumentAsync(string clientId, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpService/GetAllInstallationReceipts", ReplyAction="http://tempuri.org/ISpService/GetAllInstallationReceiptsResponse")]
        PBS.Documents.API.SharepointDocService.InstallationReceipt[] GetAllInstallationReceipts(string clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpService/GetAllInstallationReceipts", ReplyAction="http://tempuri.org/ISpService/GetAllInstallationReceiptsResponse")]
        System.Threading.Tasks.Task<PBS.Documents.API.SharepointDocService.InstallationReceipt[]> GetAllInstallationReceiptsAsync(string clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpService/GetInstallationReceiptById", ReplyAction="http://tempuri.org/ISpService/GetInstallationReceiptByIdResponse")]
        PBS.Documents.API.SharepointDocService.InstallationReceipt GetInstallationReceiptById(PBS.Documents.API.SharepointDocService.InstallationReceipt installationReceipt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpService/GetInstallationReceiptById", ReplyAction="http://tempuri.org/ISpService/GetInstallationReceiptByIdResponse")]
        System.Threading.Tasks.Task<PBS.Documents.API.SharepointDocService.InstallationReceipt> GetInstallationReceiptByIdAsync(PBS.Documents.API.SharepointDocService.InstallationReceipt installationReceipt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpService/UpdateInstallationReceipt", ReplyAction="http://tempuri.org/ISpService/UpdateInstallationReceiptResponse")]
        bool UpdateInstallationReceipt(string customerId, string receiptId, bool outCome, string hrUserEmail, string comments);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpService/UpdateInstallationReceipt", ReplyAction="http://tempuri.org/ISpService/UpdateInstallationReceiptResponse")]
        System.Threading.Tasks.Task<bool> UpdateInstallationReceiptAsync(string customerId, string receiptId, bool outCome, string hrUserEmail, string comments);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpService/GetStationaryLocations", ReplyAction="http://tempuri.org/ISpService/GetStationaryLocationsResponse")]
        string[] GetStationaryLocations();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpService/GetStationaryLocations", ReplyAction="http://tempuri.org/ISpService/GetStationaryLocationsResponse")]
        System.Threading.Tasks.Task<string[]> GetStationaryLocationsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpService/GetStationaryDocuments", ReplyAction="http://tempuri.org/ISpService/GetStationaryDocumentsResponse")]
        PBS.Documents.API.SharepointDocService.StationaryDocument[] GetStationaryDocuments(string location);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpService/GetStationaryDocuments", ReplyAction="http://tempuri.org/ISpService/GetStationaryDocumentsResponse")]
        System.Threading.Tasks.Task<PBS.Documents.API.SharepointDocService.StationaryDocument[]> GetStationaryDocumentsAsync(string location);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpService/GetStationaryDocument", ReplyAction="http://tempuri.org/ISpService/GetStationaryDocumentResponse")]
        PBS.Documents.API.SharepointDocService.StationaryDocumentWithContent GetStationaryDocument(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpService/GetStationaryDocument", ReplyAction="http://tempuri.org/ISpService/GetStationaryDocumentResponse")]
        System.Threading.Tasks.Task<PBS.Documents.API.SharepointDocService.StationaryDocumentWithContent> GetStationaryDocumentAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISpServiceChannel : PBS.Documents.API.Tests.ServiceReference1.ISpService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SpServiceClient : System.ServiceModel.ClientBase<PBS.Documents.API.Tests.ServiceReference1.ISpService>, PBS.Documents.API.Tests.ServiceReference1.ISpService {
        
        public SpServiceClient() {
        }
        
        public SpServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SpServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SpServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SpServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PBS.Documents.API.SharepointDocService.Document[] GetDocuments(string clientId) {
            return base.Channel.GetDocuments(clientId);
        }
        
        public System.Threading.Tasks.Task<PBS.Documents.API.SharepointDocService.Document[]> GetDocumentsAsync(string clientId) {
            return base.Channel.GetDocumentsAsync(clientId);
        }
        
        public PBS.Documents.API.SharepointDocService.DocumentWithContent GetDocument(string clientId, int id) {
            return base.Channel.GetDocument(clientId, id);
        }
        
        public System.Threading.Tasks.Task<PBS.Documents.API.SharepointDocService.DocumentWithContent> GetDocumentAsync(string clientId, int id) {
            return base.Channel.GetDocumentAsync(clientId, id);
        }
        
        public PBS.Documents.API.SharepointDocService.InstallationReceipt[] GetAllInstallationReceipts(string clientId) {
            return base.Channel.GetAllInstallationReceipts(clientId);
        }
        
        public System.Threading.Tasks.Task<PBS.Documents.API.SharepointDocService.InstallationReceipt[]> GetAllInstallationReceiptsAsync(string clientId) {
            return base.Channel.GetAllInstallationReceiptsAsync(clientId);
        }
        
        public PBS.Documents.API.SharepointDocService.InstallationReceipt GetInstallationReceiptById(PBS.Documents.API.SharepointDocService.InstallationReceipt installationReceipt) {
            return base.Channel.GetInstallationReceiptById(installationReceipt);
        }
        
        public System.Threading.Tasks.Task<PBS.Documents.API.SharepointDocService.InstallationReceipt> GetInstallationReceiptByIdAsync(PBS.Documents.API.SharepointDocService.InstallationReceipt installationReceipt) {
            return base.Channel.GetInstallationReceiptByIdAsync(installationReceipt);
        }
        
        public bool UpdateInstallationReceipt(string customerId, string receiptId, bool outCome, string hrUserEmail, string comments) {
            return base.Channel.UpdateInstallationReceipt(customerId, receiptId, outCome, hrUserEmail, comments);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateInstallationReceiptAsync(string customerId, string receiptId, bool outCome, string hrUserEmail, string comments) {
            return base.Channel.UpdateInstallationReceiptAsync(customerId, receiptId, outCome, hrUserEmail, comments);
        }
        
        public string[] GetStationaryLocations() {
            return base.Channel.GetStationaryLocations();
        }
        
        public System.Threading.Tasks.Task<string[]> GetStationaryLocationsAsync() {
            return base.Channel.GetStationaryLocationsAsync();
        }
        
        public PBS.Documents.API.SharepointDocService.StationaryDocument[] GetStationaryDocuments(string location) {
            return base.Channel.GetStationaryDocuments(location);
        }
        
        public System.Threading.Tasks.Task<PBS.Documents.API.SharepointDocService.StationaryDocument[]> GetStationaryDocumentsAsync(string location) {
            return base.Channel.GetStationaryDocumentsAsync(location);
        }
        
        public PBS.Documents.API.SharepointDocService.StationaryDocumentWithContent GetStationaryDocument(int id) {
            return base.Channel.GetStationaryDocument(id);
        }
        
        public System.Threading.Tasks.Task<PBS.Documents.API.SharepointDocService.StationaryDocumentWithContent> GetStationaryDocumentAsync(int id) {
            return base.Channel.GetStationaryDocumentAsync(id);
        }
    }
}
